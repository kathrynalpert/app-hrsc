#!/bin/bash
#PBS -l nodes=1:ppn=8,walltime=48:00:00,mem=24gb
#PBS -N app-hrsc

function json_arr_to_bash_list {
    local v=$@
    if [[ $v =~ \[.*\] ]]; then
        v=$(echo $v | tr -d '\[\],')  
    fi
    echo $v
}

function get_full_path {
    readlink -f -m -n "$1"
}

for prm in $(jq -r 'keys[]' config.json | grep -Ev ^_); do
    val=$(json_arr_to_bash_list $(jq -r ".$prm" config.json))
    eval "$prm=( $val )"
done

freesurfer=$(get_full_path $freesurfer)
dwi=$(get_full_path $dwi)

fsdir=$(dirname $freesurfer)
sub=$(jq -r "._inputs[0].meta.subject" config.json | tr -d "_")
rm -rf $fsdir/$sub
mv $freesurfer $fsdir/$sub

#relocate & rename as HRSC code expects
mkdir -p $fsdir/$sub/dti
for each in $(dirname $dwi)/dwi*; do
    #link into expected location, remove trailing "s" from bval/bvec filenames
    ln -sf $each $fsdir/$sub/dti/$(echo $(basename $each) | \
        sed -e 's/dwi\./dti\./' -e 's/s$//')
done

#have to create dti_mask.nii.gz, not part of HRSC code
cat>prep_and_run_HRSC.sh<<EOF
#!/bin/bash
pushd $fsdir/$sub/dti
dwi2mask -fslgrad dti.bvec dti.bval dti.nii.gz dti_mask.nii.gz
popd

run_HRSC.sh $fsdir $sub
EOF

singularity run -e \
    docker://katealpert/hrsc:v0 \
    /bin/bash ./prep_and_run_HRSC.sh
res=$?

if [[ $res == 0 ]]; then
    #incidence matrices registered to the common surface space
    mv $fsdir/$sub/connectome/incidence_matrix output
    #rm -rf $fsdir/$sub/dti $fsdir/$sub/connectome
fi

#exit code from the last command (singularity) will be used.
exit $res
