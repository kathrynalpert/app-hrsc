# Generated by Neurodocker version 0.4.0
# Timestamp: 2018-08-01 20:21:01 UTC
# 
# Thank you for using Neurodocker. If you discover any issues
# or ways to improve this software, please submit an issue or
# pull request on our GitHub repository:
# 
#     https://github.com/kaczmarj/neurodocker

FROM centos:7

ARG DEBIAN_FRONTEND="noninteractive"

ENV LANG="en_US.UTF-8" \
    LC_ALL="en_US.UTF-8" \
    ND_ENTRYPOINT="/neurodocker/startup.sh"
RUN export ND_ENTRYPOINT="/neurodocker/startup.sh" \
    && yum install -y -q \
           bzip2 \
           ca-certificates \
           curl \
           localedef \
           unzip \
    && yum clean packages \
    && rm -rf /var/cache/yum/* /tmp/* /var/tmp/* \
    && localedef -i en_US -f UTF-8 en_US.UTF-8 \
    && chmod 777 /opt && chmod a+s /opt \
    && mkdir -p /neurodocker \
    && if [ ! -f "$ND_ENTRYPOINT" ]; then \
         echo '#!/usr/bin/env bash' >> "$ND_ENTRYPOINT" \
    &&   echo 'set -e' >> "$ND_ENTRYPOINT" \
    &&   echo 'if [ -n "$1" ]; then "$@"; else /usr/bin/env bash; fi' >> "$ND_ENTRYPOINT"; \
    fi \
    && chmod -R 777 /neurodocker && chmod a+s /neurodocker

ENTRYPOINT ["/neurodocker/startup.sh"]

ENV ANTSPATH="/opt/ants-2.2.0" \
    PATH="/opt/ants-2.2.0:$PATH"
RUN echo "Downloading ANTs ..." \
    && mkdir -p /opt/ants-2.2.0 \
    && curl -fsSL --retry 5 https://dl.dropbox.com/s/2f4sui1z6lcgyek/ANTs-Linux-centos5_x86_64-v2.2.0-0740f91.tar.gz \
    | tar -xz -C /opt/ants-2.2.0 --strip-components 1

ENV FSLDIR="/opt/fsl-5.0.11" \
    PATH="/opt/fsl-5.0.11/bin:$PATH" 
ENV FSLCLUSTER_MAILOPTS=n
ENV FSLLOCKDIR=
ENV FSLMACHINELIST=
ENV FSLMULTIFILEQUIT=TRUE
ENV FSLOUTPUTTYPE=NIFTI_GZ
ENV FSLREMOTECALL=
ENV FSLTCLSH=/usr/bin/tclsh
ENV FSLWISH=/usr/bin/wish
ENV POSSUMDIR="/opt/fsl-5.0.11"
RUN yum install -y -q \
           bc \
           file \
           libGL \
           libGLU \
           libICE \
           libSM \
           libX11 \
           libXcursor \
           libXext \
           libXft \
           libXinerama \
           libXrandr \
           libXt \
           libgomp \
           libjpeg \
           libmng \
           libpng12 \
           wget \
    && yum clean packages \
    && rm -rf /var/cache/yum/* /tmp/* /var/tmp/* \
    && echo "Downloading FSL ..." \
    && mkdir -p /opt/fsl-5.0.11 \
    && curl -fsSL --retry 5 https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-5.0.11-centos6_64.tar.gz \
    | tar -xz -C /opt/fsl-5.0.11 --strip-components 1 \
    && sed -i '$iecho Some packages in this Docker container are non-free' $ND_ENTRYPOINT \
    && sed -i '$iecho If you are considering commercial use of this container, please consult the relevant license:' $ND_ENTRYPOINT \
    && sed -i '$iecho https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/Licence' $ND_ENTRYPOINT \
    && sed -i '$isource $FSLDIR/etc/fslconf/fsl.sh' $ND_ENTRYPOINT \
    && echo "Installing FSL conda environment ..." \
    && bash /opt/fsl-5.0.11/etc/fslconf/fslpython_install.sh -f /opt/fsl-5.0.11

ENV FREESURFER_HOME="/opt/freesurfer-6.0.0" \
    PATH="/opt/freesurfer-6.0.0/bin:$PATH"
RUN yum install -y -q \
           bc \
           libXmu \
           libXt \
           libgomp \
           perl \
           tcsh \
    && yum clean packages \
    && rm -rf /var/cache/yum/* /tmp/* /var/tmp/* \
    && echo "Downloading FreeSurfer ..." \
    && mkdir -p /opt/freesurfer-6.0.0 \
    && curl -fsSL --retry 5 ftp://surfer.nmr.mgh.harvard.edu/pub/dist/freesurfer/6.0.0/freesurfer-Linux-centos6_x86_64-stable-pub-v6.0.0.tar.gz \
    | tar -xz -C /opt/freesurfer-6.0.0 --strip-components 1 \
         --exclude='freesurfer/average/mult-comp-cor' \
         --exclude='freesurfer/lib/cuda' \
         --exclude='freesurfer/lib/qt' \
         --exclude='freesurfer/subjects/V1_average' \
         --exclude='freesurfer/subjects/bert' \
         --exclude='freesurfer/subjects/cvs_avg35' \
         --exclude='freesurfer/subjects/cvs_avg35_inMNI152' \
         --exclude='freesurfer/subjects/fsaverage3' \
         --exclude='freesurfer/subjects/fsaverage4' \
         --exclude='freesurfer/subjects/fsaverage5' \
         --exclude='freesurfer/subjects/fsaverage6' \
         --exclude='freesurfer/subjects/fsaverage_sym' \
         --exclude='freesurfer/trctrain' \
    && sed -i '$isource "/opt/freesurfer-6.0.0/SetUpFreeSurfer.sh"' "$ND_ENTRYPOINT"

#ENV PATH="/opt/mrtrix3-3.0/bin:$PATH"
#RUN echo "Downloading MRtrix3 ..." \
#    && mkdir -p /opt/mrtrix3-3.0 \
#    && curl -fsSL --retry 5 https://dl.dropbox.com/s/2g008aaaeht3m45/mrtrix3-Linux-centos6.tar.gz \
#    | tar -xz -C /opt/mrtrix3-3.0 --strip-components 1
ENV PATH=/opt/rh/devtoolset-4/root/usr/bin:$PATH:/usr/lib64/qt4/bin
RUN yum update -y \
    && yum install -y -q git gcc-c++ zlib-devel gsl-devel qt-devel \
    && yum install -y -q https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \
    && yum install -y -q eigen3-devel \
    && yum install -y -q centos-release-scl centos-release-scl-rh \
    && yum install -y -q devtoolset-4-gcc-c++ \
    && yum clean packages \
    && rm -rf /var/cache/yum/* /tmp/* /var/tmp/* \
    && cd /opt && git clone https://github.com/MRtrix3/mrtrix3.git \
    && cd /opt/mrtrix3 && ./configure &&  ./build
ENV PATH=/opt/mrtrix3/bin:$PATH


ENV PATH="/opt/spharm-pdm_v1.13:$PATH"
RUN mkdir /opt/spharm-pdm_v1.13 && cd /opt/spharm-pdm_v1.13 \
    && curl -fsSL --retry 5 https://www.nitrc.org/frs/download.php/6480/spharm-pdm_v1.13_linux64.zip > spharm-pdm_v1.13_linux64.zip \
    && unzip spharm-pdm_v1.13_linux64.zip && rm spharm-pdm_v1.13_linux64.zip 

#ENV LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/lib/x86_64-linux-gnu:/opt/matlabmcr-2014b/v84/runtime/glnxa64:/opt/matlabmcr-2014b/v84/bin/glnxa64:/opt/matlabmcr-2014b/v84/sys/os/glnxa64:/opt/matlabmcr-2014b/v84/extern/bin/glnxa64" \
#    MATLABCMD="/opt/matlabmcr-2014b/v84/toolbox/matlab" \
#    MCR_HOME="/opt/matlabmcr-2014b/v84"
ENV MCR_HOME="/opt/matlabmcr-2014b/v84"
RUN yum install -y -q \
           bc \
           libXext.x86_64 \
           libXmu \
           libXpm \
           libXt.x86_64 \
    && yum clean packages \
    && rm -rf /var/cache/yum/* /tmp/* /var/tmp/* \
    && echo "Downloading MATLAB Compiler Runtime ..." \
    && curl -fsSL --retry 5 -o /tmp/mcr.zip https://ssd.mathworks.com/supportfiles/downloads/R2014b/deployment_files/R2014b/installers/glnxa64/MCR_R2014b_glnxa64_installer.zip \
    && unzip -q /tmp/mcr.zip -d /tmp/mcrtmp \
    && /tmp/mcrtmp/install -destinationFolder /opt/matlabmcr-2014b -mode silent -agreeToLicense yes \
    && rm -rf /tmp/*

RUN mkdir /opt/HRSC
ADD scripts /opt/HRSC/
ENV PATH=/opt/HRSC:$PATH

ADD SUBSAMPLED_SURFACE_TARGET /root/SUBSAMPLED_SURFACE_TARGET

Add license.txt /opt/freesurfer-6.0.0/license.txt

#TORTOISE
#ADD TORTOISE_V3.1.2_Linux.tar.gz /opt/
#RUN cd /opt/TORTOISE_V3.1.2 && /bin/bash install_bash.sh

#HPC
RUN yum install -y -q \
           python-pip \
    && yum clean packages \
    && rm -rf /var/cache/yum/* /tmp/* /var/tmp/* \
    && pip install numpy \
    && cd /opt && git clone https://github.com/Washington-University/HCPpipelines

#afni
ENV PATH="/opt/afni-latest:$PATH" \
    AFNI_PLUGINPATH="/opt/afni-latest"
RUN yum install -y -q \
           ed \
           gsl \
           libGLU \
           libXp \
           libXpm \
           libgomp \
           libpng12 \
           netpbm-progs \
           openmotif \
           tcsh \
           xorg-x11-fonts-misc \
           xorg-x11-server-Xvfb \
    #       dpkg dpkg-devel \
    && yum clean packages \
    && rm -rf /var/cache/yum/* /tmp/* /var/tmp/* \
    && pip install scipy \
    #&& curl -sSL --retry 5 -o /tmp/toinstall.deb http://mirrors.kernel.org/debian/pool/main/libx/libxp/libxp6_1.0.2-2_amd64.deb \
    #&& dpkg -i /tmp/toinstall.deb \
    #&& rm /tmp/toinstall.deb \
    #&& curl -sSL --retry 5 -o /tmp/toinstall.deb http://mirrors.kernel.org/debian/pool/main/libp/libpng/libpng12-0_1.2.49-1%2Bdeb7u2_amd64.deb \
    #&& dpkg -i /tmp/toinstall.deb \
    #&& rm /tmp/toinstall.deb \
    #&& apt-get install -f \
    #&& apt-get clean \
    #&& rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    #&& gsl2_path="$(find / -name 'libgsl.so.19' || printf '')" \
    #&& if [ -n "$gsl2_path" ]; then \
    #     ln -sfv "$gsl2_path" "$(dirname $gsl2_path)/libgsl.so.0"; \
    #fi \
    #&& ldconfig \
    && echo "Downloading AFNI ..." \
    && mkdir -p /opt/afni-latest \
    && curl -fsSL --retry 5 https://afni.nimh.nih.gov/pub/dist/tgz/linux_openmp_64.tgz \
    | tar -xz -C /opt/afni-latest --strip-components 1

ENV C3DPATH="/opt/convert3d-1.0.0" \
    PATH="/opt/convert3d-1.0.0/bin:$PATH"
RUN echo "Downloading Convert3D ..." \
    && mkdir -p /opt/convert3d-1.0.0 \
    && curl -fsSL --retry 5 https://sourceforge.net/projects/c3d/files/c3d/1.0.0/c3d-1.0.0-Linux-x86_64.tar.gz/download \
    | tar -xz -C /opt/convert3d-1.0.0 --strip-components 1

